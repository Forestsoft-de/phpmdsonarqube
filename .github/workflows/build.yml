name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: latest
        endpoint: builders

    - name: Inspect builder
      shell: bash
      run: |
        echo "Name:      ${{ steps.buildx.outputs.name }}"
        echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
        echo "Status:    ${{ steps.buildx.outputs.status }}"
        echo "Flags:     ${{ steps.buildx.outputs.flags }}"
        echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
    
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: forestsoft/phpmdsonarqube

    - name: Build Docker images
      # You may pin to the exact commit or the version.
      # uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8
      uses: docker/build-push-action@v3.0.0
      with:
        # Push is a shorthand for --output=type=registry
        context: .
        file: ./Dockerfile
        tags: |
          forestsoft/phpmdsonarqube:latest
        # Push is a shorthand for --output=type=registry
        push: false

    
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      if: ${{ github.event_name != 'pull_request' }} && ${{env.GITHUB_BASE_REF == 'main' }}
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker images
      # You may pin to the exact commit or the version.
      # uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8
      if: ${{ github.event_name != 'pull_request' }} && ${{env.GITHUB_BASE_REF == 'main' }}
      uses: docker/build-push-action@v3.0.0
      with:
        context: .
        file: ./Dockerfile
        tags: |
          forestsoft/phpmdsonarqube:latest
        # Push is a shorthand for --output=type=registry
        push: true
        
